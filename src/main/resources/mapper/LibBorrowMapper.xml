<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.library.mapper.LibBorrowMapper">

    <resultMap type="com.example.library.domain.LibBorrow" id="LibBorrowResult">
        <result property="id"    column="id"    />
        <result property="bookId"    column="book_id"    />
        <result property="username"    column="username"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="bookName"    column="book_name"    />
        <result property="author"    column="author"    />
        <result property="backdate"    column="backdate"    />
    </resultMap>

    <sql id="selectLibBorrowVo">
        select id, book_id, username, status, del_flag, create_time, create_by, update_time, update_by,backdate from lib_borrow
    </sql>

    <select id="selectLibBorrowList" parameterType="com.example.library.domain.LibBorrow" resultMap="LibBorrowResult">
        select a.id, a.book_id, a.username, a.status, a.create_time, b.name book_name, b.author,a.backdate from lib_borrow a
        left join lib_book b on a.book_id = b.id
        <where>
            <if test="bookId != null "> and a.book_id = #{bookId}</if>
            <if test="username != null  and username != ''"> and a.username = #{username}</if>
            <if test="status != null  and status != ''"> and a.status = #{status}</if>
        </where>
    </select>

    <select id="selectLibBorrowById" parameterType="long" resultMap="LibBorrowResult">
        <include refid="selectLibBorrowVo"/>
        where id = #{id}
    </select>

    <select id="selectLibBorrowByUsername" resultMap="LibBorrowResult">
        <include refid="selectLibBorrowVo"/>
        where status = '0' and username = #{username} and book_id = #{bookId}
    </select>

    <insert id="insertLibBorrow" parameterType="com.example.library.domain.LibBorrow" useGeneratedKeys="true" keyProperty="id">
        insert into lib_borrow
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bookId != null">book_id,</if>
            <if test="username != null">username,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="backdate != null">backdate,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bookId != null">#{bookId},</if>
            <if test="username != null">#{username},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="backdate != null">#{backdate},</if>
        </trim>
    </insert>

    <update id="updateLibBorrow" parameterType="com.example.library.domain.LibBorrow">
        update lib_borrow
        <trim prefix="SET" suffixOverrides=",">
            <if test="bookId != null">book_id = #{bookId},</if>
            <if test="username != null">username = #{username},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="backdate != null">backdate = #{backdate},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteLibBorrowById" parameterType="long">
        delete from lib_borrow where id = #{id}
    </delete>

    <delete id="deleteLibBorrowByIds" parameterType="long">
        delete from lib_borrow where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>